services:
  easylish:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - VECTOR_API_URL=http://vector-api:8000
    restart: unless-stopped
    depends_on:
      vector-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000/api/status').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  tei:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.5
    platform: linux/amd64
    environment:
      - MODEL_ID=${TEI_MODEL_ID:-/data/models/multilingual-e5-small}
      - RUST_LOG=info
    ports:
      - "8080:80"
    restart: unless-stopped
    volumes:
      - ../data/tei:/data

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - ../data/qdrant:/qdrant/storage
    restart: unless-stopped

  vector-api:
    build:
      context: ..
      dockerfile: apps/vector-api/Dockerfile
    environment:
      - TEI_URL=http://tei:80
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=subtitles
      - VECTOR_DIM=384
      - QDRANT_DISTANCE=Cosine
      - TEI_BATCH=32
      - SUBTITLES_DIR=/data/subtitles
    ports:
      - "8000:8000"
    depends_on:
      - tei
      - qdrant
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: unless-stopped
    volumes:
      - ../data/subtitles:/data/subtitles:ro
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport sys,urllib.request\ntry:\n  with urllib.request.urlopen('http://localhost:8000/status',timeout=5) as r:\n    sys.exit(0 if r.status==200 else 1)\nexcept Exception:\n  sys.exit(1)\nPY"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
